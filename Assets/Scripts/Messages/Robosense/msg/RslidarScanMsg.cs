//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Robosense
{
    [Serializable]
    public class RslidarScanMsg : Message
    {
        public const string k_RosMessageName = "Robosense/rslidarScan";
        public override string RosMessageName => k_RosMessageName;

        //  LIDAR scan packets.
        public HeaderMsg header;
        //  standard ROS message header
        public RslidarPacketMsg[] packets;
        //  vector of raw packets

        public RslidarScanMsg()
        {
            this.header = new HeaderMsg();
            this.packets = new RslidarPacketMsg[0];
        }

        public RslidarScanMsg(HeaderMsg header, RslidarPacketMsg[] packets)
        {
            this.header = header;
            this.packets = packets;
        }

        public static RslidarScanMsg Deserialize(MessageDeserializer deserializer) => new RslidarScanMsg(deserializer);

        private RslidarScanMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.packets, RslidarPacketMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.packets);
            serializer.Write(this.packets);
        }

        public override string ToString()
        {
            return "RslidarScanMsg: " +
            "\nheader: " + header.ToString() +
            "\npackets: " + System.String.Join(", ", packets.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
